// <auto-generated />
using System;
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(TestSchoolContext))]
    partial class TestSchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Portal.Models.TeacherCourse", b =>
                {
                    b.Property<int>("TeacherCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherCourseId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.HasKey("TeacherCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("TeacherId");

                    b.ToTable("TeacherCourses", "Portal");

                    b.HasData(
                        new
                        {
                            TeacherCourseId = 1,
                            CourseId = 1,
                            IsActived = true,
                            RegisterDate = new DateTime(2025, 1, 22, 23, 1, 21, 313, DateTimeKind.Local).AddTicks(9535),
                            TeacherId = 1
                        },
                        new
                        {
                            TeacherCourseId = 2,
                            CourseId = 2,
                            IsActived = true,
                            RegisterDate = new DateTime(2025, 1, 22, 23, 1, 21, 313, DateTimeKind.Local).AddTicks(9538),
                            TeacherId = 2
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses", "Portal");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            IsActived = true,
                            RegisterDate = new DateTime(2025, 1, 22, 23, 1, 21, 313, DateTimeKind.Local).AddTicks(9524),
                            Title = "فیزیک"
                        },
                        new
                        {
                            CourseId = 2,
                            IsActived = true,
                            RegisterDate = new DateTime(2025, 1, 22, 23, 1, 21, 313, DateTimeKind.Local).AddTicks(9525),
                            Title = "ریاضی"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Security.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActived")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("TeacherId");

                    b.ToTable("Teachers", "Security");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            Address = "تهران",
                            FirstName = "علی",
                            IsActived = true,
                            LastName = "فتحی",
                            NationalCode = "0021765988",
                            PhoneNumber = "09123435566",
                            RegisterDate = new DateTime(2025, 1, 22, 23, 1, 21, 313, DateTimeKind.Local).AddTicks(9387)
                        },
                        new
                        {
                            TeacherId = 2,
                            Address = "کرج",
                            FirstName = "زهرا",
                            IsActived = true,
                            LastName = "مقدسی",
                            NationalCode = "0031265777",
                            PhoneNumber = "09354567688",
                            RegisterDate = new DateTime(2025, 1, 22, 23, 1, 21, 313, DateTimeKind.Local).AddTicks(9401)
                        },
                        new
                        {
                            TeacherId = 3,
                            Address = "تهران",
                            FirstName = "محمد",
                            IsActived = true,
                            LastName = "محمدی",
                            NationalCode = "007545667",
                            PhoneNumber = "09124546677",
                            RegisterDate = new DateTime(2025, 1, 22, 23, 1, 21, 313, DateTimeKind.Local).AddTicks(9403)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Portal.Models.TeacherCourse", b =>
                {
                    b.HasOne("Domain.Entities.Security.Models.Course", "Course")
                        .WithMany("UserCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Security.Models.Teacher", "Teacher")
                        .WithMany("UserCourses")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Domain.Entities.Security.Models.Course", b =>
                {
                    b.Navigation("UserCourses");
                });

            modelBuilder.Entity("Domain.Entities.Security.Models.Teacher", b =>
                {
                    b.Navigation("UserCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
